{"version":3,"file":"static/webpack/static/development/pages/_app.js.e37d27588c934ae7099e.hot-update.js","sources":["webpack:///./sagas/transactionsSaga.js"],"sourcesContent":["import { put, call, delay } from 'redux-saga/effects'\nimport debugConfig from '~/config/debugConfig'\nimport {\n  getAllTransactionsSuccess,\n  getAllTransactionsFailure,\n  getTransactionSuccess,\n  getTransactionFailure,\n} from '~/redux/transactionsDux'\nimport { toggleLoading } from '~/redux/uiDux'\nimport requestManager from '~/sagas/requestManager'\n\nexport function* getAllTransactions(api, { payload }) {\n  yield put(toggleLoading(true))\n  const { accountNo, type } = payload\n\n  // only in fixture to get the loading\n  if (debugConfig.useFixtures) yield delay(1500)\n\n  try {\n    const { response, error } = yield call(\n      requestManager,\n      api.getAllTransactions,\n      accountNo,\n      type\n    )\n\n    if (response.ok) {\n      yield put(getAllTransactionsSuccess(response.data))\n    }\n\n    if (error) throw new Error(error)\n  } catch (error) {\n    yield put(getAllTransactionsFailure(error))\n  } finally {\n    yield put(toggleLoading(false))\n  }\n}\n\nexport function* getTransaction(api, { payload }) {\n  const { accountNo, id } = payload\n\n  // only in fixture to get the loading\n  if (debugConfig.useFixtures) yield delay(3000)\n\n  try {\n    const { response, error } = yield call(\n      requestManager,\n      api.getTransaction,\n      accountNo,\n      id\n    )\n    if (error) throw new Error(error)\n    else if (response.ok) {\n      yield put(getTransactionSuccess(response.data))\n    }\n  } catch (error) {\n    yield put(getTransactionFailure(error.message))\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAWA;;;AA2BA;AACA;AAvCA;AACA;AACA;AAMA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAQA;AACA;AATA;AAAA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AADA;AAgBA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAqBA;AACA;AAtBA;AAAA;AAAA;AAuBA;AACA;AAxBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAAA;AAOA;AACA;AARA;AAAA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAeA;AACA;AAhBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAkBA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}